{"ast":null,"code":"async function fetchData(input, init) {\n  const response = await fetch(input, init);\n  console.log(response);\n  if (response.ok) {\n    return response;\n  } else {\n    const errorBody = await response.json();\n    const errorMessage = errorBody.error;\n    throw Error(errorMessage);\n  }\n}\nexport async function getLoggedInUser() {\n  const response = await fetchData(\"/api/users\", {\n    method: \"GET\"\n  });\n  return response.json();\n}\nexport async function signUp(credentials) {\n  const response = await fetchData(\"/api/users/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  });\n  return response.json();\n}\nexport async function login(credentials) {\n  //console.log(\"here in login\")\n\n  // this function is incorrect\n  const response = await fetchData(\"http://localhost:3000/api/users/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  });\n  // console.log(response.json());\n  // console.log(\"here in login2\")\n  return response.json();\n}\nexport async function logout() {\n  await fetchData(\"/api/users/logout\", {\n    method: \"POST\"\n  });\n}\nexport async function fetchNotes() {\n  const response = await fetch(\"/api/notes\", {\n    method: 'GET'\n  });\n  return response.json();\n}\nexport async function createNote(note) {\n  const response = await fetchData(\"/api/notes\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(note)\n  });\n  return response.json();\n}\nexport async function updateNote(noteId, note) {\n  const response = await fetchData(\"/api/notes/\" + noteId, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(note)\n  });\n  return response.json();\n}\nexport async function deleteNote(noteId) {\n  await fetchData(\"/api/notes/\" + noteId, {\n    method: 'DELETE'\n  });\n}","map":{"version":3,"names":["fetchData","input","init","response","fetch","console","log","ok","errorBody","json","errorMessage","error","Error","getLoggedInUser","method","signUp","credentials","headers","body","JSON","stringify","login","logout","fetchNotes","createNote","note","updateNote","noteId","deleteNote"],"sources":["E:/DK Rabbit/Mern-Stack-Auth-Demo/frontend/src/network/notes_api.ts"],"sourcesContent":["import { Note } from \"../models/note\";\r\nimport { User } from \"../models/user\";\r\n\r\nasync function fetchData(input: RequestInfo, init?: RequestInit) {\r\n    const response = await fetch(input, init);\r\n    console.log(response)\r\n\r\n    if (response.ok) {\r\n        return response;\r\n    } else {\r\n        const errorBody = await response.json();\r\n        const errorMessage = errorBody.error;\r\n\r\n        throw Error(errorMessage);\r\n    }\r\n}\r\n\r\nexport async function getLoggedInUser(): Promise<User> {\r\n    const response = await fetchData(\"/api/users\", { method: \"GET\" });\r\n    return response.json()\r\n}\r\n\r\nexport interface SignUpCredentials {\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n}\r\n\r\nexport async function signUp(credentials: SignUpCredentials): Promise<User> {\r\n    const response = await fetchData(\"/api/users/signup\",\r\n    { \r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(credentials),\r\n    });\r\n    return response.json();\r\n}\r\n\r\nexport interface LoginCredentials {\r\n    username: string,\r\n    password: string,\r\n}\r\n\r\nexport async function login(credentials: LoginCredentials): Promise<User> {\r\n    //console.log(\"here in login\")\r\n    \r\n    // this function is incorrect\r\n    const response = await fetchData(\"http://localhost:3000/api/users/login\",\r\n    { \r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(credentials),\r\n    });\r\n    // console.log(response.json());\r\n    // console.log(\"here in login2\")\r\n    return response.json();\r\n}\r\n\r\nexport async function logout() {\r\n    await fetchData(\"/api/users/logout\", { method: \"POST\"});\r\n}\r\n\r\nexport async function fetchNotes(): Promise<Note[]> {\r\n    const response = await fetch(\"/api/notes\", { method: 'GET' });\r\n    return response.json();\r\n}\r\n\r\nexport interface NoteInput {\r\n    title: string,\r\n    text?: string,\r\n}\r\n\r\nexport async function createNote(note: NoteInput): Promise<Note> {\r\n    const response = await fetchData(\"/api/notes\",\r\n    {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(note),\r\n    });\r\n    return response.json();\r\n}\r\n\r\nexport async function updateNote(noteId: string, note: NoteInput): Promise<Note> {\r\n    const response = await fetchData(\"/api/notes/\" + noteId,\r\n        {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(note),\r\n        });\r\n    return response.json();\r\n}\r\n\r\nexport async function deleteNote(noteId: string) {\r\n    await fetchData(\"/api/notes/\" + noteId, { method: 'DELETE'});\r\n}"],"mappings":"AAGA,eAAeA,SAASA,CAACC,KAAkB,EAAEC,IAAkB,EAAE;EAC7D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,KAAK,EAAEC,IAAI,CAAC;EACzCG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EAErB,IAAIA,QAAQ,CAACI,EAAE,EAAE;IACb,OAAOJ,QAAQ;EACnB,CAAC,MAAM;IACH,MAAMK,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACvC,MAAMC,YAAY,GAAGF,SAAS,CAACG,KAAK;IAEpC,MAAMC,KAAK,CAACF,YAAY,CAAC;EAC7B;AACJ;AAEA,OAAO,eAAeG,eAAeA,CAAA,EAAkB;EACnD,MAAMV,QAAQ,GAAG,MAAMH,SAAS,CAAC,YAAY,EAAE;IAAEc,MAAM,EAAE;EAAM,CAAC,CAAC;EACjE,OAAOX,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC1B;AAQA,OAAO,eAAeM,MAAMA,CAACC,WAA8B,EAAiB;EACxE,MAAMb,QAAQ,GAAG,MAAMH,SAAS,CAAC,mBAAmB,EACpD;IACIc,MAAM,EAAE,MAAM;IACdG,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;EACpC,CAAC,CAAC;EACF,OAAOb,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC1B;AAOA,OAAO,eAAeY,KAAKA,CAACL,WAA6B,EAAiB;EACtE;;EAEA;EACA,MAAMb,QAAQ,GAAG,MAAMH,SAAS,CAAC,uCAAuC,EACxE;IACIc,MAAM,EAAE,MAAM;IACdG,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;EACpC,CAAC,CAAC;EACF;EACA;EACA,OAAOb,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC1B;AAEA,OAAO,eAAea,MAAMA,CAAA,EAAG;EAC3B,MAAMtB,SAAS,CAAC,mBAAmB,EAAE;IAAEc,MAAM,EAAE;EAAM,CAAC,CAAC;AAC3D;AAEA,OAAO,eAAeS,UAAUA,CAAA,EAAoB;EAChD,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;IAAEU,MAAM,EAAE;EAAM,CAAC,CAAC;EAC7D,OAAOX,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC1B;AAOA,OAAO,eAAee,UAAUA,CAACC,IAAe,EAAiB;EAC7D,MAAMtB,QAAQ,GAAG,MAAMH,SAAS,CAAC,YAAY,EAC7C;IACIc,MAAM,EAAE,MAAM;IACdG,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,IAAI;EAC7B,CAAC,CAAC;EACF,OAAOtB,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC1B;AAEA,OAAO,eAAeiB,UAAUA,CAACC,MAAc,EAAEF,IAAe,EAAiB;EAC7E,MAAMtB,QAAQ,GAAG,MAAMH,SAAS,CAAC,aAAa,GAAG2B,MAAM,EACnD;IACIb,MAAM,EAAE,OAAO;IACfG,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,IAAI;EAC7B,CAAC,CAAC;EACN,OAAOtB,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC1B;AAEA,OAAO,eAAemB,UAAUA,CAACD,MAAc,EAAE;EAC7C,MAAM3B,SAAS,CAAC,aAAa,GAAG2B,MAAM,EAAE;IAAEb,MAAM,EAAE;EAAQ,CAAC,CAAC;AAChE"},"metadata":{},"sourceType":"module","externalDependencies":[]}